---
- name: Remove service
  community.docker.docker_swarm_service:
    name: "{{ tag }}"
    state: absent

- name: "[{{ tag }}] Ensure folder exist"
  become: true
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: "{{ item.state }}"
    mode: "{{ item.mode }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
  loop:
    - {path: "{{ monitoring_folder }}/{{ tag }}", state: directory, mode: "775", owner: "{{ ansible_user }}", group: "{{ ansible_user }}"}
#    - {path: "/tmp/{{ tag }}", state: directory, mode: "775", owner: "1000", group: "1000"}

### моя вставка
#- name: Copy file with owner and permissions
#  become: true
#  ansible.builtin.copy:
#    src: "{{ item.src }}"
#    dest: "{{ item.dest }}"
#    mode: "{{ item.mode }}"
#    owner: "{{ item.owner }}"
#    group: "{{ item.group }}"
#  loop:
#    - {src: alertmanager.yml, dest: "{{ /opt/alertmanager/alertmanager.yml }}", mode: "664", owner: "{{ ansible_user }}", group: "{{ ansible_user }}"}

#- name: "[{{ tag }}] Upload  file"
#  ansible.builtin.template:
#    src: "{{ item.src }}"
#    dest: "{{ item.dest }}"
#    mode: "{{ item.mode }}"
#    owner: "{{ item.owner }}"
#    group: "{{ item.group }}"
#  loop:
#    - {src: alertmanager.yml.j2, dest: "/tmp/{{ tag }}/alertmanager.yml", mode: "664", owner: "1000", group: "1000"}

#- name: Создание сети
#  community.docker.docker_network:
#    name: "{{ network_name }}"
#    driver: overlay

#- name: Create config foo (from a file on the target machine)
#  community.docker.docker_config:
#    name: "{{ item.name }}"
#    data_src: "{{ item.data_src }}"
#    state: "{{ item.state }}"
#  loop:
#    - {name: alertmanager.yml, data_src: "/tmp/{{ tag }}/alertmanager.yml", state: "present"}

- name: "[{{ tag }}] Выкладываем сервис"
  community.docker.docker_swarm_service:
    name: "{{ tag }}"
    image: "{{ image }}"
    state: "{{ item.state }}"
    networks:
      - name: "{{ network_name }}"
    publish:
      - {mode: ingress, protocol: tcp, published_port: 9093, target_port: 9093}
    configs:
      - config_name: "{{ item.name }}"
        filename: "{{ item.filename }}"
    placement:
      constraints:
        - node.labels.key1 == monitoring
#      preferences:
#        - spread: node.labels.alertmanager
  loop:
    - {name: alertmanager.yml, filename: "{{ monitoring_folder }}/{{ tag }}/alertmanager.yml", state: "present"}
